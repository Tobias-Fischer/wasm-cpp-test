# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages:    write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: envs/ci-env.yaml
          environment-name: ci-env
          micromamba-version: '1.5.6'
      - name: Download bash-builder
        run: |
          curl https://raw.githubusercontent.com/mbatc/bash-builder/main/bash-builder>bash-builder | chmod u+x bash-builder
      - name: Configure Project
        run: |
          mkdir .bash-builder/conf

          echo -n "emscripten-forge" > .bash-builder/conf/emforge-env-name
          echo -n "emrobostack-wasm" > .bash-builder/conf/emrobostack-env-name
          echo -n "3.1.45" > .bash-builder/conf/emsdk-version

          echo -n "$GITHUB_WORKSPACE/deps/emscripten-forge" > .bash-builder/conf/emscripten-forge-dir
          echo -n "$GITHUB_WORKSPACE/deps/wasm-cpp" > .bash-builder/conf/wasm-cpp-dir
          echo -n "$GITHUB_WORKSPACE/deps/wasm-js" > .bash-builder/conf/wasm-js-dir
          echo -n "$GITHUB_WORKSPACE/deps/emsdk" > .bash-builder/conf/emsdk-dir

          ./bash-builder . ./setup.sh
        shell: bash
      - name: Build Swift
        run: |
          ./bash-builder . ./build.sh
          touch dist/.nojekyll
        shell: bash
      - uses: actions/upload-pages-artifact@v2
        with:
          path: ./dist
  deploy:
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
